<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>监听端口被占用</title>
      <link href="/2025/05/08/%E7%9B%91%E5%90%AC%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/"/>
      <url>/2025/05/08/%E7%9B%91%E5%90%AC%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>近日 IDEA 经常卡死，强制关闭重启项目，发现端口处于被占用状态</p></blockquote><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>以 Linux&#x2F;MacOS 为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> lsof -i :8080</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COMMAND   PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME</span><br><span class="line">java    12345 root   14u  IPv6 0x123456789abcdef    0t0  TCP *:8080 (LISTEN)</span><br></pre></td></tr></table></figure><p>其中，PID 为进程 ID，可使用 kill 命令杀死进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">kill</span> -9 12345</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RESTful API</title>
      <link href="/2025/05/07/API/"/>
      <url>/2025/05/07/API/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Representational State Transfer (REST) 是一种软件架构风格，用于设计网络应用程序的接口。RESTful API 是基于 REST 架构风格的 API 设计。  </p></blockquote><h1 id="Representational"><a href="#Representational" class="headerlink" title="Representational"></a>Representational</h1><p>资源的表现形式,<strong>描述数据的数据</strong>，元数据。  </p><h2 id="HTTP-方法"><a href="#HTTP-方法" class="headerlink" title="HTTP 方法"></a>HTTP 方法</h2><ul><li>GET: 服务端查询数据并返回至客户端</li><li>POST: 客户端产生数据发送至服务端，服务端新增并保存</li><li>PUT: 客户端更新服务端资源</li><li>DELETE: 客户端希望删除服务端的资源</li><li>…</li></ul><p>举个例子:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">GET</span>    /classes：列出所有班级</span><br><span class="line"><span class="variable constant_">POST</span>   /classes：新建一个班级</span><br><span class="line"><span class="variable constant_">GET</span>    /classes/&#123;classId&#125;：获取某个指定班级的信息</span><br><span class="line"><span class="variable constant_">PUT</span>    /classes/&#123;classId&#125;：更新某个指定班级的信息（一般倾向整体更新）</span><br><span class="line"><span class="variable constant_">PATCH</span>  /classes/&#123;classId&#125;：更新某个指定班级的信息（一般倾向部分更新）</span><br><span class="line"><span class="variable constant_">DELETE</span> /classes/&#123;classId&#125;：删除某个班级</span><br><span class="line"><span class="variable constant_">GET</span>    /classes/&#123;classId&#125;/teachers：列出某个指定班级的所有老师的信息</span><br><span class="line"><span class="variable constant_">GET</span>    /classes/&#123;classId&#125;/students：列出某个指定班级的所有学生的信息</span><br><span class="line"><span class="variable constant_">DELETE</span> /classes/&#123;classId&#125;/teachers/&#123;<span class="variable constant_">ID</span>&#125;：删除某个指定班级下的指定的老师的信息</span><br></pre></td></tr></table></figure><h2 id="content-type"><a href="#content-type" class="headerlink" title="content-type"></a>content-type</h2><p>描述数据的类型。</p><ul><li>application&#x2F;json</li><li>application&#x2F;xml</li><li>text&#x2F;plain </li><li>…</li></ul><h2 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h2><ul><li>200: OK</li><li>201: Created</li><li>204: No Content</li><li>400: Bad Request</li><li>401: Unauthorized</li><li>403: Forbidden</li><li>404: Not Found</li><li>500: Internal Server Error</li><li>503: Service Unavailable<br>-…</li></ul><h1 id="State"><a href="#State" class="headerlink" title="State"></a>State</h1><p>数据本身，资源。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text=<span class="string">&quot;hello world&quot;</span></span><br><span class="line">json=<span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">&#125;</span></span><br><span class="line">xml=&lt;person&gt;&lt;name&gt;John&lt;/name&gt;&lt;age&gt;<span class="number">30</span>&lt;/age&gt;&lt;/person&gt;</span><br></pre></td></tr></table></figure><div style="text-align: center;">  <img src="/img/API/2.png" /></div>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字节 AIGCStylizeImage API 调用文档</title>
      <link href="/2025/05/04/volcengine-api-doc/"/>
      <url>/2025/05/04/volcengine-api-doc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="字节-AIGCStylizeImage-API-调用文档"><a href="#字节-AIGCStylizeImage-API-调用文档" class="headerlink" title="字节 AIGCStylizeImage API 调用文档"></a>字节 AIGCStylizeImage API 调用文档</h1><p>整合并简化了字节官网的 API 接入文档，从注册账号到跑通，一定可以加快你的上手速度，<strong>实际工程调用实例可以直接跳转到最后一个目录单元</strong>。</p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p><a href="https://console.volcengine.com/ark/region:ark+cn-beijing/model/detail?Id=doubao-i2i-style&projectName=undefined">火山引擎官网</a>， 注册账号并完成实名认证，在下拉栏中选择 API访问密钥，按指引创建密钥，获取必要的 <code>ak</code> 、<code>sk</code>。</p><img src="/img/api_1.jpg" />返回刚刚的页面，开通 Doubao—AIGC图像风格化模型，可以看到以下界面：<img src="/img/api_2.png" /><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><p><a href="https://www.volcengine.com/docs/6791/1314297">官方文档</a></p><h3 id="必要请求参数"><a href="#必要请求参数" class="headerlink" title="必要请求参数"></a>必要请求参数</h3><blockquote><p>  注意：url 和 base64 二选一即可</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;req_key&quot;</span>: <span class="string">&quot;img2img_disney_3d_style&quot;</span>, <span class="comment">#指定的风格</span></span><br><span class="line">  <span class="string">&quot;sub_req_key&quot;</span>:<span class="string">&quot;&quot;</span>   <span class="comment"># !!! 根据情况选择 看后文对 sub_req_key 的解释 </span></span><br><span class="line">    <span class="string">&quot;image_urls&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;https://xxx&quot;</span></span><br><span class="line">    ],</span><br><span class="line">  <span class="string">&quot;binary_data_base64&quot;</span>: [</span><br><span class="line">      <span class="comment">#处理过的图片 base64编码 </span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;return_url&quot;</span>: true,</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="req-key"><a href="#req-key" class="headerlink" title="req_key"></a>req_key</h4><p>指定的风格，即 <code>req_key</code> 可选参数如下（代码块可展开）：                       </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">网红日漫风：img2img_ghibli_style</span><br><span class="line"></span><br><span class="line">3D风: img2img_disney_3d_style</span><br><span class="line"></span><br><span class="line">写实风：img2img_real_mix_style</span><br><span class="line"></span><br><span class="line">天使风：img2img_pastel_boys_style</span><br><span class="line"></span><br><span class="line">动漫风：img2img_cartoon_style</span><br><span class="line"></span><br><span class="line">日漫风：img2img_makoto_style</span><br><span class="line"></span><br><span class="line">公主风：img2img_rev_animated_style</span><br><span class="line"></span><br><span class="line">梦幻风：img2img_blueline_style</span><br><span class="line"></span><br><span class="line">水墨风：img2img_water_ink_style</span><br><span class="line"></span><br><span class="line">新莫奈花园: i2i_ai_create_monet</span><br><span class="line"></span><br><span class="line">水彩风：img2img_water_paint_style</span><br><span class="line"></span><br><span class="line">莫奈花园：img2img_comic_style</span><br><span class="line"></span><br><span class="line">精致美漫：img2img_comic_style</span><br><span class="line"></span><br><span class="line">赛博机械：img2img_comic_style</span><br><span class="line"></span><br><span class="line">精致韩漫：img2img_exquisite_style</span><br><span class="line"></span><br><span class="line">国风-水墨：img2img_pretty_style</span><br><span class="line"></span><br><span class="line">浪漫光影：img2img_pretty_style</span><br><span class="line"></span><br><span class="line">陶瓷娃娃：img2img_ceramics_style</span><br><span class="line"></span><br><span class="line">中国红：img2img_chinese_style</span><br><span class="line"></span><br><span class="line">丑萌粘土：img2img_clay_style</span><br><span class="line"></span><br><span class="line">可爱玩偶：img2img_clay_style</span><br><span class="line"></span><br><span class="line">3D-游戏_Z时代：img2img_3d_style</span><br><span class="line"></span><br><span class="line">动画电影：img2img_3d_style</span><br><span class="line"></span><br><span class="line">玩偶：img2img_3d_style  </span><br></pre></td></tr></table></figure><h4 id="sub-req-key"><a href="#sub-req-key" class="headerlink" title="sub_req_key"></a>sub_req_key</h4><p>目的是区分大风格下的分支风格，<strong>只有部分风格需要这个参数，其余风格不需要传参</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">莫奈花园：img2img_comic_style_monet</span><br><span class="line"></span><br><span class="line">精致美漫：img2img_comic_style_marvel</span><br><span class="line"></span><br><span class="line">赛博机械：img2img_comic_style_future</span><br><span class="line"></span><br><span class="line">国风-水墨：img2img_pretty_style_ink</span><br><span class="line"></span><br><span class="line">浪漫光影：img2img_pretty_style_light</span><br><span class="line"></span><br><span class="line">丑萌粘土：img2img_clay_style_3d</span><br><span class="line"></span><br><span class="line">可爱玩偶：img2img_clay_style_bubble</span><br><span class="line"></span><br><span class="line">3D-游戏_Z时代：img2img_3d_style_era</span><br><span class="line"></span><br><span class="line">动画电影：img2img_3d_style_movie</span><br><span class="line"></span><br><span class="line">玩偶：img2img_3d_style_doll  </span><br></pre></td></tr></table></figure><h3 id="返回参数"><a href="#返回参数" class="headerlink" title="返回参数"></a>返回参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;code&quot;</span>: <span class="number">10000</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;algorithm_base_resp&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;status_code&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;status_message&quot;</span>: <span class="string">&quot;Success&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;binary_data_base64&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;/9xxx&quot;</span>,  <span class="comment">#重点关注此返回，转换后的图片Base64</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;image_urls&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;https://xxx&quot;</span> <span class="comment">#重点关注此返回，转换后的图片url</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">#.... 其他不重要的返回数据</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Success&quot;</span>,</span><br><span class="line">    <span class="string">&quot;request_id&quot;</span>: <span class="string">&quot;202405201722544E4A22904AB5C20B42D5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;status&quot;</span>: <span class="number">10000</span>,</span><br><span class="line">    <span class="string">&quot;time_elapsed&quot;</span>: <span class="string">&quot;5.849820164s&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="请求示例"><a href="#请求示例" class="headerlink" title="请求示例"></a>请求示例</h3><p>可以借助 <a href="https://api.volcengine.com/api-explorer?action=AIGCStylizeImage&data=%7B%7D&groupName=%E4%BA%BA%E5%83%8F%E4%BA%BA%E4%BD%93%E5%85%AC%E6%B5%8B&query=%7B%7D&serviceCode=cv&tab=signTool&version=2024-06-06&tab_sdk=PYTHON">签名工具</a>获取签名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST /?Action=CVProcess&amp;Version=<span class="number">2022</span>-08-<span class="number">31</span> HTTP/<span class="number">1.1</span></span><br><span class="line">Host: visual.volcengineapi.com</span><br><span class="line">Content-<span class="type">Type</span>: application/json; charset=UTF-<span class="number">8</span></span><br><span class="line">X-Date: 20241120T122058Z</span><br><span class="line">X-Content-Sha256: 287e874e******d653b44d21e</span><br><span class="line">Authorization: HMAC-SHA256 Credential=Adfks******wekfwe/<span class="number">20241120</span>/cn-beijing/cv/request, SignedHeaders=host;x-content-sha256;x-date, Signature=47a7d934ff7b37c03938******cd7b8278a40a1057690c401e92246a0e41085f</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;req_key&quot;</span>: <span class="string">&quot;img2img_disney_3d_style&quot;</span>,</span><br><span class="line">    <span class="string">&quot;image_urls&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;https://xxx&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;return_url&quot;</span>: true,</span><br><span class="line">    <span class="string">&quot;logo_info&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;add_logo&quot;</span>: true,</span><br><span class="line">        <span class="string">&quot;position&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&quot;language&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&quot;logo_text_content&quot;</span>: <span class="string">&quot;这里是明水印内容&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可使用字节提供的 SDK <strong>（强烈推荐这个方式）</strong></p><h2 id="SDK-的使用-（强烈推荐）"><a href="#SDK-的使用-（强烈推荐）" class="headerlink" title="SDK 的使用 （强烈推荐）"></a>SDK 的使用 （强烈推荐）</h2><blockquote><p>  以 <code>python</code>为例，其他语言可以去<a href="https://www.volcengine.com/docs/6444/1340578#0f05efc9">官网</a>自行查阅</p></blockquote><p>手动下载工具包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install volcengine-python-sdk==2.0.1</span><br><span class="line">pip install volcengine</span><br></pre></td></tr></table></figure><p>实例调用代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> volcengine.visual.VisualService <span class="keyword">import</span> VisualService</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    visual_service = VisualService()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># call below method if you don&#x27;t set ak and sk in $HOME/.volc/config</span></span><br><span class="line">    visual_service.set_ak(<span class="string">&#x27;your ak&#x27;</span>)</span><br><span class="line">    visual_service.set_sk(<span class="string">&#x27;your sk&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 请求Body(查看接口文档请求参数-请求示例，将请求参数内容复制到此)</span></span><br><span class="line">    form = &#123;</span><br><span class="line">        <span class="string">&quot;req_key&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    resp = visual_service.cv_process(form)</span><br><span class="line">    <span class="built_in">print</span>(resp)</span><br></pre></td></tr></table></figure><h1 id="调用实例"><a href="#调用实例" class="headerlink" title="调用实例"></a>调用实例</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> volcengine.visual.VisualService <span class="keyword">import</span> VisualService</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    visual_service = VisualService()</span><br><span class="line">    visual_service.set_ak(<span class="string">&#x27;你的 ak&#x27;</span>) <span class="comment">#自行配置</span></span><br><span class="line">    visual_service.set_sk(<span class="string">&#x27;你的 sk&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    input_folder = <span class="string">&quot;你的文件夹&quot;</span> <span class="comment">#自行配置</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(input_folder):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;输入文件夹 <span class="subst">&#123;input_folder&#125;</span> 不存在&quot;</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建 doubao_output 文件夹</span></span><br><span class="line">    output_folder = <span class="string">&#x27;doubao_output&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_folder):</span><br><span class="line">        os.makedirs(output_folder)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(input_folder):</span><br><span class="line">        <span class="keyword">if</span> filename.endswith((<span class="string">&#x27;.png&#x27;</span>, <span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;.jpeg&#x27;</span>)):</span><br><span class="line">            image_path = os.path.join(input_folder, filename)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(image_path, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> image_file:</span><br><span class="line">                    image_bytes = image_file.read()</span><br><span class="line">                    encoded_image = base64.b64encode(image_bytes).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                form = &#123;</span><br><span class="line">                    <span class="string">&quot;req_key&quot;</span>: <span class="string">&quot;img2img_water_ink_style&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;binary_data_base64&quot;</span>: [encoded_image],</span><br><span class="line">                    <span class="string">&quot;return_url&quot;</span>: <span class="literal">True</span>,</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                resp = visual_service.cv_process(form)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;处理 <span class="subst">&#123;filename&#125;</span> 的响应: <span class="subst">&#123;resp&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;data&#x27;</span> <span class="keyword">in</span> resp <span class="keyword">and</span> <span class="string">&#x27;image_urls&#x27;</span> <span class="keyword">in</span> resp[<span class="string">&#x27;data&#x27;</span>]:</span><br><span class="line">                    <span class="keyword">for</span> index, url <span class="keyword">in</span> <span class="built_in">enumerate</span>(resp[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;image_urls&#x27;</span>]):</span><br><span class="line">                        clean_url = url.strip(<span class="string">&#x27; `&#x27;</span>)</span><br><span class="line">                        <span class="keyword">try</span>:</span><br><span class="line">                            response = requests.get(clean_url)</span><br><span class="line">                            <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">                                new_filename = <span class="string">f&quot;db_<span class="subst">&#123;filename&#125;</span>&quot;</span></span><br><span class="line">                                file_path = os.path.join(output_folder, new_filename)</span><br><span class="line">                                <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                                    f.write(response.content)</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">f&#x27;图片 <span class="subst">&#123;new_filename&#125;</span> 已保存到 <span class="subst">&#123;file_path&#125;</span>&#x27;</span>)</span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">f&#x27;下载图片 <span class="subst">&#123;clean_url&#125;</span> 失败，状态码: <span class="subst">&#123;response.status_code&#125;</span>&#x27;</span>)</span><br><span class="line">                        <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">f&#x27;下载图片 <span class="subst">&#123;clean_url&#125;</span> 时发生错误: <span class="subst">&#123;e&#125;</span>&#x27;</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;处理 <span class="subst">&#123;filename&#125;</span> 时发生错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>效果展示：</p><img src="/img/api_3.png" />]]></content>
      
      
      
        <tags>
            
            <tag> AIGC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阶段工作总结</title>
      <link href="/2025/05/02/%E9%98%B6%E6%AE%B5%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
      <url>/2025/05/02/%E9%98%B6%E6%AE%B5%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="人脸风格化可行性方案"><a href="#人脸风格化可行性方案" class="headerlink" title="人脸风格化可行性方案"></a>人脸风格化可行性方案</h1><blockquote><p>  目前路线为 多数据源启动数据，小样本训练 Lora 后，使用数据合成循环管道，不断过滤优化数据，生成大量数据，最终训练出高质量的指令引导的人脸风格化模型</p></blockquote><h2 id="一、现有开源工具生成"><a href="#一、现有开源工具生成" class="headerlink" title="一、现有开源工具生成"></a>一、现有开源工具生成</h2><h3 id="1、通过-EasyControl-生成-Ghibli-风格的人脸数据"><a href="#1、通过-EasyControl-生成-Ghibli-风格的人脸数据" class="headerlink" title="1、通过 EasyControl 生成 Ghibli 风格的人脸数据"></a>1、通过 EasyControl 生成 Ghibli 风格的人脸数据</h3><p><a href="https://github.com/Xiaojiu-z/EasyControl">https://github.com/Xiaojiu-z/EasyControl</a></p><h3 id="2、通过-豆包-生成部分风格数据"><a href="#2、通过-豆包-生成部分风格数据" class="headerlink" title="2、通过 豆包 生成部分风格数据"></a>2、通过 豆包 生成部分风格数据</h3><blockquote><p>  还需注意是否开源、开源协议</p></blockquote><p>例如 <code>3D动漫、插画、绘本</code> … 均有不错的表现</p><h3 id="3、通过-HiDream-I1-生成数据"><a href="#3、通过-HiDream-I1-生成数据" class="headerlink" title="3、通过 HiDream-I1 生成数据"></a>3、通过 HiDream-I1 生成数据</h3><p><a href="https://github.com/HiDream-ai/HiDream-I1">https://github.com/HiDream-ai/HiDream-I1</a></p><p>在线测试，风格化后均为半身照，这意味着只能专门处理半身人像</p><p>部署显存需 <code>70GB</code> 以上，待实验</p><h3 id="4、SD-3-5"><a href="#4、SD-3-5" class="headerlink" title="4、SD 3.5"></a>4、SD 3.5</h3><p><a href="https://platform.stability.ai/">https://platform.stability.ai/</a></p><p>在以往实验中，SD 3.5 生成其预设的风格能力还是非常不错的，例如<code>pixel、cyberpunk</code>，不过模型还<strong>没有开源</strong></p><h2 id="二、Multi-Control-面部解偶-deStyle"><a href="#二、Multi-Control-面部解偶-deStyle" class="headerlink" title="二、Multi_Control 面部解偶 deStyle"></a>二、Multi_Control 面部解偶 deStyle</h2><blockquote><p>  数据生成步骤中的 <code>核心创新点 </code></p></blockquote><p>使用 FLUX+ControlNet 为base，通过分别提取人脸和背景 canny，同时设有不同的权重，通过 prompt 引导实现已风格化图像的去风格化任务。</p><p>基于现有实验拟定的<strong>最佳组合参数</strong>如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">control_image=[</span><br><span class="line">    control_image_pose,</span><br><span class="line">    control_image_canny, <span class="comment">#background</span></span><br><span class="line">    control_image_canny_face,</span><br><span class="line">    <span class="comment"># control_image_depth</span></span><br><span class="line">    ], </span><br><span class="line">controlnet_conditioning_scale=[<span class="number">0.33</span>,<span class="number">0.5</span>,<span class="number">0.3</span>],</span><br><span class="line">control_guidance_end=[<span class="number">0.3</span>,<span class="number">0.8</span>,<span class="number">0.65</span>],</span><br><span class="line">num_inference_steps=<span class="number">45</span>,</span><br><span class="line">guidance_scale=<span class="number">8</span>,</span><br></pre></td></tr></table></figure><h3 id="尝试过的部分失败组合"><a href="#尝试过的部分失败组合" class="headerlink" title="尝试过的部分失败组合"></a>尝试过的部分失败组合</h3><ul><li><p>Pose + Canny_backgroud , 缺少面部信息，模型生成面部内容质量很低</p></li><li><p>Canny_face + Canny_backgrond , 缺少 <code>Pose</code> 的引导与平衡，<code>Canny</code> 完全占主导地位，效果不佳</p></li><li><p>…+ Depth , 高权重下 <code>Depth</code> 的阴影部分严重影响生成图片的背景，使背景变暗，低权重几乎没有作用</p></li></ul><h3 id="当前组合下的几个疑难点"><a href="#当前组合下的几个疑难点" class="headerlink" title="当前组合下的几个疑难点"></a>当前组合下的几个疑难点</h3><ul><li><p>由于目前仅基于 FFHQ 数据集测试，均为人脸或小半身人脸，且于 <code>Canny</code> 控制下 <code>Pose</code> 作用甚微，主要起补充信息作用，后续若扩张为半身人像或全身人像，该参数可能需重新考虑</p></li><li><p>Double Canny 权重拮抗，若人脸 <code>canny</code> 权重高于背景，则可能会出现过拟合的状态，<code>eg：Ghibli 的大眼睛</code>，若背景 <code>canny</code> 权重高于人脸，则可能会出现丢失面部内容信息，所以这两个参数还需不断测试，或探索别的办法来解决这一问题</p></li><li><p>prompt 质量严重影响生成质量，这是最让我头疼的一点，同样参数下，不同的 <code>prompt</code> 产出的内容质量差别不小，个人认为 <code>prompt</code> 中应至少含有以下几点信息 <code>头发颜色，衣服颜色，背景颜色，肤色，真实感，真实皮肤纹理</code>等等</p></li><li><p>step、guidance_scale 的值同样值得推敲</p></li></ul><p>后续应批量处理数据，不断改进参数，找到适配这样去风格处理手段的风格，测试 Multi_control 和 Single_control的差异</p>]]></content>
      
      
      
        <tags>
            
            <tag> AIGC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的 HF 环境变量</title>
      <link href="/2025/05/02/HF%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2025/05/02/HF%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="HF-环境变量"><a href="#HF-环境变量" class="headerlink" title="HF 环境变量"></a>HF 环境变量</h2><p>以 linux 为例，在<code>~/.bashrc</code>中添加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HUGGINGFACE_HUB_CACHE=<span class="string">&quot;/root/autodl-tmp/huggingface&quot;</span>  <span class="comment"># 替换为你的缓存目录</span></span><br><span class="line"><span class="built_in">export</span> HF_HOME=<span class="string">&quot;/root/autodl-tmp/huggingface&quot;</span> <span class="comment"># 替换为你的缓存目录</span></span><br><span class="line"><span class="built_in">export</span> HF_ENDPOINT=https://hf-mirror.com <span class="comment"># HF镜像地址</span></span><br></pre></td></tr></table></figure><p>然后执行<code>source ~/.bashrc</code>使环境变量生效。  </p><blockquote><p>注意：<code>/autodl-tmp/huggingface</code>是我在 autodl 上的一个临时目录，你可以根据自己的需要修改。  </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$HUGGINGFACE_HUB_CACHE</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$HF_HOME</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$HF_ENDPOINT</span></span><br></pre></td></tr></table></figure><p>如果输出以下结果，说明配置成功  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/root/autodl-tmp/huggingface</span><br><span class="line">/root/autodl-tmp/huggingface</span><br><span class="line">https://hf-mirror.com</span><br></pre></td></tr></table></figure><p>下载 huggingface-hub 库，使用 <code>huggingface-cli login</code> 命令登录 huggingface </p><h2 id="Autodl-环境变量"><a href="#Autodl-环境变量" class="headerlink" title="Autodl 环境变量"></a>Autodl 环境变量</h2><p>Autodl 内置 git 加速通道 （ autodl 上 git 速度简直太慢了，真不如下载 zip ）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GIT_TRACE_PACKET=1</span><br><span class="line"><span class="built_in">export</span> GIT_TRACE=1</span><br><span class="line"><span class="built_in">export</span> GIT_CURL_VERBOSE=1</span><br><span class="line"><span class="comment"># 能有个 几十Kb 的提升？ /冒汗</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> AIGC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/03/30/hello-world/"/>
      <url>/2025/03/30/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about me</title>
      <link href="/aboutme/index.html"/>
      <url>/aboutme/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="About-Me"><a href="#About-Me" class="headerlink" title="About Me"></a>About Me</h1><blockquote><p>这个世界太疯狂，因为从小爱玩游戏，学了计算机，学了计算机以后就不怎么玩游戏了</p></blockquote><ul><li><h4 id="23’JLU-Undergraduate-CSer-💻"><a href="#23’JLU-Undergraduate-CSer-💻" class="headerlink" title="23’JLU Undergraduate CSer 💻"></a>23’JLU Undergraduate CSer 💻</h4></li><li><h4 id="2004-天秤-INFJ-🐒"><a href="#2004-天秤-INFJ-🐒" class="headerlink" title="2004 天秤 INFJ 🐒"></a>2004 天秤 INFJ 🐒</h4></li><li><h4 id="技术栈：吃饭-睡觉-打豆豆-💤"><a href="#技术栈：吃饭-睡觉-打豆豆-💤" class="headerlink" title="技术栈：吃饭 睡觉 打豆豆 💤"></a>技术栈：吃饭 睡觉 打豆豆 💤</h4></li><li><h4 id="爱好：听歌-运动-玩游戏-🎵-🚴-💪-🎮"><a href="#爱好：听歌-运动-玩游戏-🎵-🚴-💪-🎮" class="headerlink" title="爱好：听歌 运动 玩游戏 🎵 🚴 💪 🎮"></a>爱好：听歌 运动 玩游戏 🎵 🚴 💪 🎮</h4></li></ul><h3 id="叫-skippy-是因为初中喜欢听-《崂山道士》，后面大家都这么叫，那就这么叫吧"><a href="#叫-skippy-是因为初中喜欢听-《崂山道士》，后面大家都这么叫，那就这么叫吧" class="headerlink" title="叫 skippy 是因为初中喜欢听 《崂山道士》，后面大家都这么叫，那就这么叫吧"></a>叫 skippy 是因为初中喜欢听 《崂山道士》，后面大家都这么叫，那就这么叫吧</h3><br><h2 id="My-Hero"><a href="#My-Hero" class="headerlink" title="My Hero"></a>My Hero</h2><div style="display: flex; justify-content: space-around; flex-wrap: wrap;">  <img src="/img/lld.jpg" style="flex: 1; max-width: 25%; height: auto;">  <img src="/img/mx.jpg" style="flex: 1; max-width: 25%; height: auto;">  <img src="/img/pgone.jpg" style="flex: 1; max-width: 25%; height: auto;">  <img src="/img/rpoz.jpg" style="flex: 1; max-width: 25%; height: auto;"></div><h2 id="I-Listen-To"><a href="#I-Listen-To" class="headerlink" title="I Listen To"></a>I Listen To</h2><div style="display: flex; justify-content: space-around; flex-wrap: wrap;">  <img src="/img/mww.jpg" style="flex: 1; max-width: 33%; height: auto;">  <img src="/img/wf.jpg" style="flex: 1; max-width: 33%; height: auto;">  <img src="/img/cl.jpg" style="flex: 1; max-width: 33%; height: auto;"></div><div style="display: flex; justify-content: space-around; flex-wrap: wrap;">  <img src="/img/drake.jpg" style="flex: 1; max-width: 33%; height: auto;">  <img src="/img/gunna.jpg" style="flex: 1; max-width: 33%; height: auto;">  <img src="/img/xiaoxia.jpg" style="flex: 1; max-width: 33%; height: auto;"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/aplayer.css"/>
      <url>/css/aplayer.css</url>
      
        <content type="html"><![CDATA[/* 音乐播放器 */.aplayer.aplayer-narrow .aplayer-body,.aplayer.aplayer-narrow .aplayer-pic {  height: 66px;  width: 66px;}#page:has(.aplayer):has(.aplayer-body):has(.aplayer-list) #post-comment .tk-comments-container > .tk-comment {  border: none;  box-shadow: none;}/* 导航栏音乐 */@media screen and (max-width: 1300px) {  #nav-music {    display: none !important;  }}#nav-music {  display: flex;  align-items: center;  z-index: 9;  position: fixed;  bottom: 20px;  left: 20px;  cursor: pointer;  transition: 0.5s;  transform-origin: left bottom;  box-shadow: var(--anzhiyu-shadow-border);  border-radius: 40px;  overflow: hidden;}#nav-music:active {  transform: scale(0.97);}#nav-music.playing {  box-shadow: 0 0px 12px -3px var(--anzhiyu-none);  animation: playingShadow 5s linear infinite;}@keyframes playingShadow {  0% {    box-shadow: 0 0px 12px -3px var(--anzhiyu-none);  }  50% {    box-shadow: 0 0px 12px 0px var(--anzhiyu-main);  }  100% {    box-shadow: 0 0px 12px -3px var(--anzhiyu-none);  }}#nav-music .aplayer.aplayer-withlrc .aplayer-pic {  height: 25px;  width: 25px;  border-radius: 40px;  z-index: 1;  transition: 0.3s;  transform: rotate(0deg) scale(1);  border: var(--style-border-always);  animation: changeright 24s linear infinite;  animation-play-state: paused;}#nav-music.playing .aplayer.aplayer-withlrc .aplayer-pic {  box-shadow: 0 0 14px #ffffffa6;  transform: rotate(0deg) scale(1.1);  border-color: var(--anzhiyu-white);  animation-play-state: running;}@keyframes changeright {  0% {    transform: rotate(0deg) scale(1.1);    box-shadow: 0 0 2px #ffffff00;  }  25% {    transform: rotate(90deg) scale(1.1);    box-shadow: 0 0 14px #ffffff;  }  50% {    transform: rotate(180deg) scale(1.1);    box-shadow: 0 0 2px #ffffff00;  }  75% {    transform: rotate(270deg) scale(1.1);    box-shadow: 0 0 14px #ffffff;  }  100% {    transform: rotate(360deg) scale(1.1);    box-shadow: 0 0 2px #ffffff00;  }}#nav-music .aplayer.aplayer-withlrc .aplayer-info {  height: 100%;  color: var(--anzhiyu-fontcolor);  margin: 0;  padding: 0;  display: flex;  align-items: center;}#nav-music.playing .aplayer.aplayer-withlrc .aplayer-info {  color: var(--anzhiyu-white);}#nav-music.playing #nav-music-hoverTips {  width: 0;  opacity: 0;}#nav-music #nav-music-hoverTips {  color: var(--anzhiyu-white);  background: var(--anzhiyu-main);  width: 100%;  height: 100%;  position: absolute;  top: 0;  left: 0;  align-items: center;  justify-content: center;  display: flex;  border-radius: 40px;  opacity: 0;  font-size: 12px;  z-index: 2;  transition: 0.3s;}#nav-music:hover:not(.playing) #nav-music-hoverTips {  opacity: 1;}#nav-music  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap:hover  .aplayer-bar  .aplayer-played  .aplayer-thumb {  display: none;}#nav-music .aplayer {  background: var(--card-bg);  border-radius: 60px;  height: 41px;  display: flex;  margin: 0;  transition: 0.3s;  border: var(--style-border);  box-shadow: none;}#nav-music.playing .aplayer {  background: var(--anzhiyu-main-op-deep);  border: var(--style-border-hover);  backdrop-filter: saturate(180%) blur(20px);  backdrop-filter: blur(20px);}#nav-music .aplayer .aplayer-notice {  display: none;}#nav-music .aplayer .aplayer-miniswitcher {  display: none;}#nav-music .aplayer .aplayer-body {  position: relative;  display: flex;  align-items: center;}#nav-music .aplayer-list {  display: none;}#nav-music .aplayer .aplayer-info .aplayer-music {  margin: 0;  display: flex;  align-items: center;  padding: 0 12px 0 8px;  cursor: pointer;  z-index: 1;  height: 100%;}#nav-music .aplayer .aplayer-info .aplayer-controller .aplayer-time {  display: none;}#nav-music .aplayer .aplayer-info .aplayer-music .aplayer-author {  display: none;}#nav-music .aplayer.aplayer-withlist .aplayer-info {  border: none;}#nav-music .aplayer .aplayer-pic .aplayer-button {  bottom: 50%;  right: 50%;  transform: translate(50%, 50%);  margin: 0;  transition: 0.3s;}#nav-music .aplayer .aplayer-pic:has(.aplayer-button.aplayer-play) {  animation-play-state: paused;  transform: rotate(0deg) scale(1) !important;}#nav-music .aplayer.aplayer-withlrc .aplayer-pic {  margin-left: 8px;}#nav-music .aplayer .aplayer-info .aplayer-music .aplayer-title {  cursor: pointer;  line-height: 1;  display: inline-block;  white-space: nowrap;  max-width: 120px;  overflow: hidden;  text-overflow: ellipsis;  transition: 0.3s;  user-select: none;}#nav-music .aplayer .aplayer-info .aplayer-controller {  position: absolute;  width: 100%;  height: 100%;  top: 0;  left: 0;}#nav-music .aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap {  margin: 0;  padding: 0;}#nav-music .aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar {  height: 100%;  background: none;}#nav-music .aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-loaded {  display: none;}#nav-music .aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played {  height: 100%;  opacity: 0.1;  background-color: var(--anzhiyu-white) !important;  animation: lightBar 5s ease infinite;  animation-play-state: paused;}#nav-music.playing .aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played {  animation-play-state: running;}@keyframes lightBar {  0% {    opacity: 0.1;  }  60% {    opacity: 0.3;  }  100% {    opacity: 0.1;  }}/* 歌词 */#nav-music .aplayer.aplayer-withlrc .aplayer-lrc {  width: 0;  opacity: 0;  transition: 0.3s;  margin-top: -2px;  padding: 5px 0;}#nav-music.stretch .aplayer.aplayer-withlrc .aplayer-lrc {  margin-left: 8px;}#nav-music.stretch .aplayer.aplayer-withlrc .aplayer-lrc {  width: 200px;  margin-bottom: 0;  opacity: 1;}#nav-music .aplayer .aplayer-lrc p.aplayer-lrc-current {  color: var(--anzhiyu-white);  border: none;}#nav-music .aplayer .aplayer-lrc:after,#nav-music .aplayer .aplayer-lrc:before {  display: none;}#nav-music .aplayer .aplayer-lrc p {  color: #ffffffb3;}#nav-music .aplayer .aplayer-pic {  pointer-events: none;}#nav-music .aplayer .aplayer-pic .aplayer-button {  pointer-events: all;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #181b25;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #3b70fc;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/anzhiyu.js"/>
      <url>/js/anzhiyu.js</url>
      
        <content type="html"><![CDATA[var navMusicEl = document.getElementById("nav-music");var anzhiyu = {  //切换音乐播放状态  musicToggle: function (changePaly = true) {    if (!anzhiyu_musicFirst) {      musicBindEvent();      anzhiyu_musicFirst = true;    }    let msgPlay = '<i class="fa-solid fa-play"></i><span>播放音乐</span>'; // 此處可以更改為你想要顯示的文字    let msgPause = '<i class="fa-solid fa-pause"></i><span>暂停音乐</span>'; // 同上，但兩處均不建議更改    if (anzhiyu_musicPlaying) {      navMusicEl.classList.remove("playing");      // 修改右键菜单文案为播放      // document.getElementById("menu-music-toggle").innerHTML = msgPlay;      document.getElementById("nav-music-hoverTips").innerHTML = "音乐已暂停";      // document.querySelector("#consoleMusic").classList.remove("on");      anzhiyu_musicPlaying = false;      navMusicEl.classList.remove("stretch");    } else {      navMusicEl.classList.add("playing");      // 修改右键菜单文案为暂停      // document.getElementById("menu-music-toggle").innerHTML = msgPause;      // document.querySelector("#consoleMusic").classList.add("on");      anzhiyu_musicPlaying = true;      navMusicEl.classList.add("stretch");    }    if (changePaly) document.querySelector("#nav-music meting-js").aplayer.toggle();  },  // 音乐伸缩  musicTelescopic: function () {    if (navMusicEl.classList.contains("stretch")) {      navMusicEl.classList.remove("stretch");    } else {      navMusicEl.classList.add("stretch");    }  },  //音乐上一曲  musicSkipBack: function () {    document.querySelector("#nav-music meting-js").aplayer.skipBack();  },  //音乐下一曲  musicSkipForward: function () {    document.querySelector("#nav-music meting-js").aplayer.skipForward();  },  //获取音乐中的名称  musicGetName: function () {    var x = $(".aplayer-title");    var arr = [];    for (var i = x.length - 1; i >= 0; i--) {      arr[i] = x[i].innerText;    }    return arr[0];  },};// 如果有右键事件 可以在这里写。// addRightMenuClickEvent();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/anzhiyuOnlyOne.js"/>
      <url>/js/anzhiyuOnlyOne.js</url>
      
        <content type="html"><![CDATA[var anzhiyu_musicPlaying = false;var anzhiyu_musicFirst = false;]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>hi</title>
      <link href="/hi/index.html"/>
      <url>/hi/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/anzhiyufunction.js"/>
      <url>/js/anzhiyufunction.js</url>
      
        <content type="html"><![CDATA[// 音乐绑定事件function musicBindEvent() {    document.querySelector("#nav-music .aplayer-music").addEventListener("click", function () {      anzhiyu.musicTelescopic();    });    document.querySelector("#nav-music .aplayer-button").addEventListener("click", function () {      anzhiyu.musicToggle(false);    });  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/meting.js"/>
      <url>/js/meting.js</url>
      
        <content type="html"><![CDATA["use strict";function _objectSpread(a) {  for (var b = 1; b < arguments.length; b++) {    var c = null == arguments[b] ? {} : arguments[b],      d = Object.keys(c);    "function" == typeof Object.getOwnPropertySymbols &&      (d = d.concat(        Object.getOwnPropertySymbols(c).filter(function (a) {          return Object.getOwnPropertyDescriptor(c, a).enumerable;        })      )),      d.forEach(function (b) {        _defineProperty(a, b, c[b]);      });  }  return a;}function _defineProperty(a, b, c) {  return (    b in a ? Object.defineProperty(a, b, { value: c, enumerable: !0, configurable: !0, writable: !0 }) : (a[b] = c), a  );}class MetingJSElement extends HTMLElement {  connectedCallback() {    window.APlayer && window.fetch && (this._init(), this._parse());  }  disconnectedCallback() {    this.lock || this.aplayer.destroy();  }  _camelize(a) {    return a      .replace(/^[_.\- ]+/, "")      .toLowerCase()      .replace(/[_.\- ]+(\w|$)/g, (a, b) => b.toUpperCase());  }  _init() {    let a = {};    for (let b = 0; b < this.attributes.length; b += 1)      a[this._camelize(this.attributes[b].name)] = this.attributes[b].value;    let b = [      "server",      "type",      "id",      "api",      "auth",      "auto",      "lock",      "name",      "title",      "artist",      "author",      "url",      "cover",      "pic",      "lyric",      "lrc",    ];    this.meta = {};    for (var c = 0; c < b.length; c++) {      let d = b[c];      (this.meta[d] = a[d]), delete a[d];    }    (this.config = a),      (this.api =        this.meta.api ||        window.meting_api ||        "https://api.i-meto.com/meting/api?server=:server&type=:type&id=:id&r=:r"),      this.meta.auto && this._parse_link();  }  _parse_link() {    let a = [      ["music.163.com.*song.*id=(\\d+)", "netease", "song"],      ["music.163.com.*album.*id=(\\d+)", "netease", "album"],      ["music.163.com.*artist.*id=(\\d+)", "netease", "artist"],      ["music.163.com.*playlist.*id=(\\d+)", "netease", "playlist"],      ["music.163.com.*discover/toplist.*id=(\\d+)", "netease", "playlist"],      ["y.qq.com.*song/(\\w+).html", "tencent", "song"],      ["y.qq.com.*album/(\\w+).html", "tencent", "album"],      ["y.qq.com.*singer/(\\w+).html", "tencent", "artist"],      ["y.qq.com.*playsquare/(\\w+).html", "tencent", "playlist"],      ["y.qq.com.*playlist/(\\w+).html", "tencent", "playlist"],      ["xiami.com.*song/(\\w+)", "xiami", "song"],      ["xiami.com.*album/(\\w+)", "xiami", "album"],      ["xiami.com.*artist/(\\w+)", "xiami", "artist"],      ["xiami.com.*collect/(\\w+)", "xiami", "playlist"],    ];    for (var b = 0; b < a.length; b++) {      let c = a[b],        d = new RegExp(c[0]),        e = d.exec(this.meta.auto);      if (null !== e) return (this.meta.server = c[1]), (this.meta.type = c[2]), void (this.meta.id = e[1]);    }  }  _parse() {    if (this.meta.url) {      let a = {        name: this.meta.name || this.meta.title || "Audio name",        artist: this.meta.artist || this.meta.author || "Audio artist",        url: this.meta.url,        cover: this.meta.cover || this.meta.pic,        lrc: this.meta.lrc || this.meta.lyric || "",        type: this.meta.type || "auto",      };      return (        a.lrc || (this.meta.lrcType = 0),        this.innerText && ((a.lrc = this.innerText), (this.meta.lrcType = 2)),        void this._loadPlayer([a])      );    }    let a = this.api      .replace(":server", this.meta.server)      .replace(":type", this.meta.type)      .replace(":id", this.meta.id)      .replace(":auth", this.meta.auth)      .replace(":r", Math.random());    fetch(a)      .then(a => a.json())      .then(a => this._loadPlayer(a));  }  _loadPlayer(a) {    let b = { audio: a, mutex: !0, lrcType: this.meta.lrcType || 3, storageName: "metingjs" };    if (a.length) {      let a = _objectSpread({}, b, this.config);      for (let b in a) ("true" === a[b] || "false" === a[b]) && (a[b] = "true" === a[b]);      let c = document.createElement("div");      (a.container = c), this.appendChild(c), (this.aplayer = new APlayer(a));    }  }}console.log(  "\n %c MetingJS v2.0.1 %c https://github.com/metowolf/MetingJS \n",  "color: #fadfa3; background: #030307; padding:5px 0;",  "background: #fadfa3; padding:5px 0;"),  window.customElements &&    !window.customElements.get("meting-js") &&    ((window.MetingJSElement = MetingJSElement), window.customElements.define("meting-js", MetingJSElement));]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一些值得写下心情的歌"><a href="#一些值得写下心情的歌" class="headerlink" title="一些值得写下心情的歌"></a>一些值得写下心情的歌</h1><h4 id="随心记录，有可能听了非常多遍了，也有可能只是每日推荐刚听到的"><a href="#随心记录，有可能听了非常多遍了，也有可能只是每日推荐刚听到的" class="headerlink" title="随心记录，有可能听了非常多遍了，也有可能只是每日推荐刚听到的"></a>随心记录，有可能听了非常多遍了，也有可能只是每日推荐刚听到的</h4><h2 id="王菲-脸"><a href="#王菲-脸" class="headerlink" title="王菲 - 脸"></a>王菲 - 脸</h2><p>变奏，真好听</p><blockquote><p>最好<br>没有人明白我说什么啊</p></blockquote><p>五月一号，有点累</p><div class="aplayer" data-id="299904" data-server="netease" data-type="song"></div><br><h2 id="方大同-回留"><a href="#方大同-回留" class="headerlink" title="方大同 - 回留"></a>方大同 - 回留</h2><p>一个人伏案工作常听</p><blockquote><p>lets go back<br>lets go back to the place</p></blockquote><p>忧伤与力量</p><div class="aplayer" data-id="2635125903" data-server="netease" data-type="song"></div><br><h2 id="小霞-礼貌"><a href="#小霞-礼貌" class="headerlink" title="小霞 - 礼貌"></a>小霞 - 礼貌</h2><p>欣赏每一个 我说“谢谢”，会回我“不客气”的人</p><blockquote><p>你不知道<br>那天的勇气逃之夭夭</p></blockquote><p>总有些没什么礼貌的人</p><div class="aplayer" data-id="1901320265" data-server="netease" data-type="song"></div><br><h2 id="陈粒-fxxk-the-rest"><a href="#陈粒-fxxk-the-rest" class="headerlink" title="陈粒 - fxxk the rest"></a>陈粒 - fxxk the rest</h2><p>网易云历史记录第一</p><blockquote><p>stay with me<br>fxxk the rest</p></blockquote><p>意义非凡</p><div class="aplayer" data-id="28941007" data-server="netease" data-type="song"></div><br><h2 id="kanye-Runaway"><a href="#kanye-Runaway" class="headerlink" title="kanye - Runaway"></a>kanye - Runaway</h2><p>很难相信这是14年的歌</p><blockquote><p>look at you<br>look at you<br>look at you</p></blockquote><p>男人是不能矫情的，咬碎牙往肚子里咽！！</p><div class="aplayer" data-id="18969210" data-server="netease" data-type="song"></div><br><h2 id="王菲-无常"><a href="#王菲-无常" class="headerlink" title="王菲 - 无常"></a>王菲 - 无常</h2><p>24年暑假离开深圳回学校的航班上一直在单曲循环，也是2024年的年度歌曲。</p><blockquote><p>喜中带忧，暗中有光<br>怎么度，怎么量</p></blockquote><p>很好诠释了我从当时到现在的很多想法</p><div class="aplayer" data-id="300146" data-server="netease" data-type="song"></div><br><h2 id="草东没有派对-床"><a href="#草东没有派对-床" class="headerlink" title="草东没有派对 - 床"></a>草东没有派对 - 床</h2><p>并不是摇滚音乐的垂直听众，但是有一天在每日推荐中听到，循环了很久。</p><blockquote><p>从何时对悲剧的向往<br>填满了整个心脏</p></blockquote><p>有种什么都不怕的感觉。</p><div class="aplayer" data-id="2035279723" data-server="netease" data-type="song"></div><br><h2 id="水木年华-再见了，最爱的人"><a href="#水木年华-再见了，最爱的人" class="headerlink" title="水木年华 - 再见了，最爱的人"></a>水木年华 - 再见了，最爱的人</h2><p>我爸的车载音乐里面有很多水木年华的歌，在我小学的时候我常常主动打开听，现在其实也是我爸的车载音乐，但我俩都再也没打开过了</p><blockquote><p>再见了最爱的人啊<br>最爱的人啊</p></blockquote><p>现在听起来有些黯然神伤，自己真的是一瞬间长大了</p><div class="aplayer" data-id="376363" data-server="netease" data-type="song"></div><br><h2 id="小霞-那是错，这时对"><a href="#小霞-那是错，这时对" class="headerlink" title="小霞 - 那是错，这时对"></a>小霞 - 那是错，这时对</h2><p>小霞，三张专辑质量均属上乘，很多首都值得反复听。</p><blockquote><p>那时候做错的事<br>是不够醉生梦死</p></blockquote><p>很少也刻意地不去纠结自己什么事做对了，什么事做错了。</p><div class="aplayer" data-id="1901320263" data-server="netease" data-type="song"></div><br>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>旅行</title>
      <link href="/travel/index.html"/>
      <url>/travel/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="看景不如听景"><a href="#看景不如听景" class="headerlink" title="看景不如听景"></a>看景不如听景</h1><h4 id="记录自高考以后去过的地方"><a href="#记录自高考以后去过的地方" class="headerlink" title="记录自高考以后去过的地方"></a>记录自高考以后去过的地方</h4><h2 id="2023"><a href="#2023" class="headerlink" title="2023"></a>2023</h2><h3 id="2023-06-西藏"><a href="#2023-06-西藏" class="headerlink" title="2023-06 - 西藏"></a>2023-06 - 西藏</h3><img src="/images/2023-06-01.jpg" alt="2023-06-01" style="width: 100%;"><h2 id="2024"><a href="#2024" class="headerlink" title="2024"></a>2024</h2><h3 id="2024-08-深圳"><a href="#2024-08-深圳" class="headerlink" title="2024-08 - 深圳"></a>2024-08 - 深圳</h3><h3 id="2024-09-天津"><a href="#2024-09-天津" class="headerlink" title="2024-09 - 天津"></a>2024-09 - 天津</h3>]]></content>
      
    </entry>
    
    
  
</search>
